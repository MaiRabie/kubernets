jobs:
  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster
orbs:
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0
version: 2.1
workflows:
  deployment:
    jobs:
      - aws-eks/create-cluster:
          cluster-name: my-eks-demo
      - test-cluster:
          cluster-name: my-eks-demo
          requires:
            - aws-eks/create-cluster
      - aws-eks/delete-cluster:
          cluster-name: my-eks-demo
          requires:
            - test-cluster

#version: 2.1
#
#orbs:
#  aws-eks: circleci/aws-eks@0.2.3
#  kubernetes: circleci/kubernetes@0.4.0
##  aws-eks: circleci/aws-eks@1.1.0
##  cli: circleci/circleci-cli@0.1.2
##  kubernetes: circleci/kubernetes@0.4.0
##  helm: circleci/helm@1.2.0
##  orb-tools: circleci/orb-tools@7.3.0
#
#
#jobs:
#  create-deployment:
#    parameters:
#      executor:
#        type: executor
#      region:
#        type: string
#        default: ""
#      cluster-name:
#        description: |
#          Name of the EKS cluster
#        type: string
#    executor: aws-eks/python3
#    steps:
#      - checkout
#      - aws-eks/update-kubeconfig-with-authenticator:
#          cluster-name: << parameters.cluster-name >>
#          aws-region: << parameters.region >>
#          install-kubectl: true
#      - kubernetes/create-or-update-resource:
#          resource-file-path: "tests/nginx-deployment/deployment.yaml"
#          resource-name: "deployment/nginx-deployment"
#          get-rollout-status: true
#          show-kubectl-command: true
#
#workflows:
#  deployment:
#    jobs:
#      - aws-eks/create-cluster:
##          name: setup-cluster-kubectl
#          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-eks-orb-test-kubectl
#          aws-region: "us-east-2"
#
#      - create-deployment:
#          name: create-deployment-kubectl
#          executor: aws-eks/python3
#          region: "us-east-2"
#          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-eks-orb-test-kubectl
#          requires:
#            - aws-eks/create-cluster
#

#              ********************************************************************************
#      - aws-eks/update-container-image:
#          name: update-container-image-kubectl
#          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-eks-orb-test-kubectl
#          aws-region: "ap-southeast-1"
#          resource-name: "deployment/nginx-deployment"
#          container-image-updates: "nginx=nginx:1.9.1"
#          get-rollout-status: true
#          record: true
#          post-steps:
#            - kubernetes/delete-resource:
#                resource-types: "deployments"
#                resource-names: "nginx-deployment"
#                now: true
#                wait: true
#          requires:
#            - create-deployment-kubectl
#          filters: *integration_test_filters
#      - aws-eks/delete-cluster:
#          name: delete-cluster-kubectl
#          cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-eks-orb-test-kubectl
#          aws-region: "ap-southeast-1"
#          wait: true
#          requires:
#            - update-container-image-kubectl
#          filters: *integration_test_filters
  # Tag-triggered workflow to promote a dev orb into production.
  # The tag is expected to have been applied manually.
